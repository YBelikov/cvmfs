#!/bin/bash

vmfs_test_name="redirect_dir directories renames test"
cvmfs_test_autofs_on_startup=false
cvmfs_test_suites="quick"

produce_initial_files_in() {
  local working_dir=$1

  pushdir $working_dir
  mkdir  contains_directories
  mkidr  contains_directories/dir_1
  mkdir  contains_directories/dir_2
  mkdir  contains_directories/dir_3
  mkdir  contains_directories/dir_1/subdir_with_files
  mkdir  contains_directories/dir_2/subdir_with_nested_dir
  mkdir  contains_directories/dir_3/subdir_nothing
  
  echo "test 1" > contains_directories/dir_1/subdir_with_files/file_1
  echo "test 2" > contains_directories/dir_1/subdir_with_files/file_2
  echo "test 3" > contains_directories/dir_1/subdir_with_files/file_3
  echo "test 4" > contains_directories/dir_1/subdir_with_files/file_4
  
  mkdir contains_directories/dir_2/subdir_with_nested_dir/sub_subdir_1
  mkdir contains_directories/dir_2/subdir_with_nested_dir/sub_subdir_2
  mkdir contains_directories/dir_2/subdir_with_nested_dir/sub_subdir_3

  popdir
}

move_on_upper_level_and_back {
  local working_dir=$1

  pushdir $working_dir
  
  mv contains_directories/dir_3/subdir_nothing contains_directories/dir_nothing
  mv contains_directories/subdir_nothing contains_directories/dir_3/dir_nothing

  popdir
}

move_subdir_with_files_and_update_content() {
  local working_dir=$1

  pushdir $working_dir

  mv contains_directories/dir_1/subdir_with_files contains_directories/subdir_with_files_renamed
  echo "Update content in file_1" > contains_directories/subdir_with_files_renamed/file_1
  echo "Update content in file_3" > contains_directories/subdir_with_files_renamed/file_3

  popdir
}

update_content_and_move() {
  local working_dir=$1

  pushdir $working_dir

  echo "Update content in file_2" > contains_directories/subdir_with_files_renamed/file_2
  echo "Update content in file_4" > contains_directories/subdir_with_files_renamed/file_4
  mv contains_directories/subdir_with_files_renamed contains_directories/dir_1/subdir_with_files
  popdir
}

move_directory_and_add_file() {
  local working_dir=$1

  pushdir $working_dir

  mv contains_directories/dir_2/subdir_with_nested_dir/sub_subdir_1 contains_directories/sub_subdir_1_renamed
  echo "Something" > contains_directories/sub_subdir_1_renamed/something
  popdir
}

move_directory_and_remove_file() {
  local working_dir=$1
  pushdir $working_dir
  mv contains_directories/sub_subdir_1_renamed contains_directories/dir_2/subdir_with_nested_dir/sub_subdir_1
  rm -f contains_directories/dir_2/subdir_with_nested_dir/sub_subdir_1/file_1/something
  mv contains_many_entries contains_many_entries_renamed
}


move_parent_and_child_dirs_and_add_file() {
  local working_dir=$1
  pushdir $working_dir
  mv contains_directories/dir2 contains_directories/dir2_renamed
  mv contains_directories/dir2_renamed/subdir_with_nested_dir/sub_subdir_1 contains_directories/dir2_renamed/subdir_with_nested_dir/sub_subdir_1_renamed
  echo "Some text" > contains_directories/dir2_renamed/subdir_with_nested_dir/sub_subdir_1_renamed/test
}

move_parent_and_child_dirs_and_update_file() {
  local working_dir=$1
  pushdir $working_dir
  mv contains_directories/dir2_renamed contains_directories/dir2
  mv contains_directories/dir2/subdir_with_nested_dir/sub_subdir_1_renamed contains_directories/dir2/subdir_with_nested_dir/sub_subdir_1
  echo "Updated text" > contains_directories/dir2/subdir_with_nested_dir/sub_subdir_1/test
}

cvmfs_run_test() {
  logfile=$1
  local repo_dir=/cvmfs/$CVMFS_TEST_REPO

  local scratch_dir=$(pwd)
  mkdir reference_dir
  local reference_dir=$scratch_dir/reference_dir

  echo "*** 1 create a fresh repository named $CVMFS_TEST_REPO with user $CVMFS_TEST_USER"
  create_empty_repo $CVMFS_TEST_REPO $CVMFS_TEST_USER || return $?

  echo "*** 1 starting transaction to edit repository (1)"
  start_transaction $CVMFS_TEST_REPO || return $?

  echo "*** 1 putting some stuff in the new repository"
  produce_initial_files_in $repo_dir || return 3

  echo "*** 1 putting exactly the same stuff in the scratch space for comparison"
  produce_initial_files_in $reference_dir || return 4

  echo "*** 1 creating CVMFS snapshot"
  publish_repo $CVMFS_TEST_REPO || return $?

  echo "*** 1 compare the results of cvmfs to our reference copy"
  compare_directories $repo_dir $reference_dir || return $?

  echo "*** 1 check catalog and data integrity"
  check_repository $CVMFS_TEST_REPO -i  || return $?

#
# ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##
#

  echo "*** 2 starting transaction to edit repository (2)"
  start_transaction $CVMFS_TEST_REPO || return $?

  echo "*** 2 putting a new file in dir and rename dir"
  add_file_and_rename_parent $repo_dir || return 5

  echo "*** 2 doing exactly the same in the scratch space for comparison"
  add_file_and_rename_parent $reference_dir || return 6

  echo "*** 2 creating CVMFS snapshot"
  publish_repo $CVMFS_TEST_REPO || return $?

  echo "*** 2 compare the results of cvmfs to our reference copy"
  compare_directories $repo_dir $reference_dir || return $?

  echo "*** 2 check catalog and data integrity"
  check_repository $CVMFS_TEST_REPO -i  || return $?

#
# ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##
#

  echo "*** 3 starting transaction to edit repository (3)"
  start_transaction $CVMFS_TEST_REPO || return $?

  echo "*** 3 removing a file from dir and renaming dir"
  remove_file_and_rename_parent $repo_dir || return 7

  echo "*** 3 doing exactly the same in the scratch space for comparison"
  remove_file_and_rename_parent $reference_dir || return 8

  echo "*** 3 creating CVMFS snapshot"
  publish_repo $CVMFS_TEST_REPO || return $?

  echo "*** 3 compare the results of cvmfs to our reference copy"
  compare_directories $repo_dir $reference_dir || return $?

  echo "*** 3 check catalog and data integrity"
  check_repository $CVMFS_TEST_REPO -i  || return $?

#
# ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##
#

  echo "*** 4 starting transaction to edit repository (4)"
  start_transaction $CVMFS_TEST_REPO || return $?

  echo "*** 4 removing an empty directory in dir and renaming dir"
  remove_empty_directory_and_rename_parent $repo_dir || return 8

  echo "*** 4 doing exactly the same in the scratch space for comparison"
  remove_empty_directory_and_rename_parent $reference_dir || return 9

  echo "*** 4 creating CVMFS snapshot"
  publish_repo $CVMFS_TEST_REPO || return $?

  echo "*** 4 compare the results of cvmfs to our reference copy"
  compare_directories $repo_dir $reference_dir || return $?

  echo "*** 4 check catalog and data integrity"
  check_repository $CVMFS_TEST_REPO -i  || return $?

#
# ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##
#

  echo "*** 5 starting transaction to edit repository (5)"
  start_transaction $CVMFS_TEST_REPO || return $?

  echo "*** 5 removing a non-empty directory in dir and rename dir"
  remove_directory_and_rename_parent $repo_dir || return 10

  echo "*** 5 doing exactly the same in the scratch space for comparison"
  remove_directory_and_rename_parent $reference_dir || return 11

  echo "*** 5 creating CVMFS snapshot"
  publish_repo $CVMFS_TEST_REPO || return $?

  echo "*** 5 compare the results of cvmfs to our reference copy"
  compare_directories $repo_dir $reference_dir || return $?

  echo "*** 5 check catalog and data integrity"
  check_repository $CVMFS_TEST_REPO -i  || return $?

#
# ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##
#

  echo "*** 6 starting transaction to edit repository (6)"
  start_transaction $CVMFS_TEST_REPO || return $?

  echo "*** 6 removing an entry among others in dir and rename dir"
  remove_directory_among_many_entries_and_rename_parent $repo_dir || return 12

  echo "*** 6 doing exactly the same in the scratch space for comparison"
  remove_directory_among_many_entries_and_rename_parent $reference_dir || return 13

  echo "*** 6 creating CVMFS snapshot"
  publish_repo $CVMFS_TEST_REPO || return $?

  echo "*** 6 compare the results of cvmfs to our reference copy"
  compare_directories $repo_dir $reference_dir || return $?

  echo "*** 6 check catalog and data integrity"
  check_repository $CVMFS_TEST_REPO -i  || return $?

  return 0
}